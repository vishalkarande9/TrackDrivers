1) ReadFile class: Takes filepath as input and has read method which returns the array of commands as output

2) So we learned a lot about async code and that is crucial knowledge you need as a Javascript web developer, no way

around that, you need to understand this.

Now with this out of the way, let's have a look at readability,

this code here can be cumbersome to read, right?

If we have such code where we have callbacks nested into each other, like for example here where we have

some callback with setTimeout with another callback again then maybe another function that uses

yet another callback,

then we enter something which has a nickname of callback hell because it gets cumbersome to read and

maintain, it can be hard to track

what's nested in where,

which variables can access where, this is really not nice code to look at.

Now thankfully Javascript has a solution for that and that is the concept of promises. Promises

allow us to write cleaner code because they look like this.

We have some task, then we used the special then keyword,

we then pass a callback to then

but then if we have another task that depends on the first task, we simply add another then block instead

of nesting it into each other

and therefore we have only one level of nesting here

instead of having multiple levels and that makes our code way more readable, let's have a look at that



3) keep in mind that for example Lodash here, if you add it like this, includes a lot of functionality which

you never use.

We only use the difference method here and yet we still import all the other features as well,

that means that users of our application will download all that code even if we just use one feature.

We can see the effect if we reload our page, you see the Lodash package here has 24kb.

Now obviously that's not that big but it's way bigger than the rest of our application, so that can be

a downside, you're downloading way more than you might need and that could slow down the initial loading

time of your application which matters a lot if your application primarily targets people in areas of

the world with poor internet connection.

So that's one thing to keep in mind,

you might include a lot of overhead.

That being said however, it is worth pointing out that many libraries allow you to import them in different
